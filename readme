### 목표  
- 비트 플립(bit-flip) 오류가 ODIN 및 Mahalanobis score 를 얼마나 왜곡시키는지 정량화  
- ASH 기법이 오류로 인한 스코어 드리프트를 완화하는지 테스트

### 해야 할 일
- PyTorchFi 또는 custom bit-flip injector (https://github.com/4thMemorize/Pytorch-Fault-Simulator.git) 를 통합하여  
  - 단일 비트 플립 (single-bit flip)  
  - 이중 비트 플립 (double-bit flip)  
  - 버스트 플립 (burst flip)  
  을 주입
- 플립이 발생한 위치별로 스코어 변화(score shift)를 매핑하여  
  → "오류에 민감한 레이어(fault-sensitive layers)"를 식별
- ASH를 적용한 후 다시 실험하고,  
  → Silent Data Corruption (SDC) 발생률을 비교 분석

### 참고해야 할 주요 논문
- Sumedh, ProGIP (2024, 석사논문)  
  - OOD 탐지를 위한 기울기 기반 방법을 소프트 에러로부터 보호하는 방법
- Reagen et al., Minerva (ISCA 2016)  
  - 하드웨어/소프트웨어 통합으로 신뢰성 강화한 저전력 DNN
- Hendrycks et al., AugMix (ICLR 2020)  
  - 데이터 증강을 통한 모델 강인성 향상 방법
- Athalye et al., Obfuscated Gradients (ICML 2018)  
  - 잘못된 보안감(Obfuscated Gradients)이 방어 효과를 과신하게 만든다는 비판
- Djurisic et al., Activation Shaping for OOD Detection (arXiv 2022)  
  - OOD 탐지를 위해 매우 간단한 방식으로 활성화값을 조정하는 방법 제안
